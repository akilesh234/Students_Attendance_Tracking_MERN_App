{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern_app_mini\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\n// Simple protection: redirect to login if not authenticated\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuth();\n  if (!isAuthenticated) {\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to. This allows us to send them back after login.\n    // state={{ from: location }} // <-- Removed location dependency for simplicity\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n\n  // If authenticated, render the child component (or Outlet for nested routes)\n  return children ? children : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 34\n  }, this);\n};\n\n// Optional: Role-based protection\n_s(ProtectedRoute, \"1LGxUrjNz4q7iKM/2JDC9lJQ3xY=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport const RoleProtectedRoute = ({\n  allowedRoles,\n  children\n}) => {\n  _s2();\n  const {\n    isAuthenticated,\n    user\n  } = useAuth();\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n  if (!allowedRoles || !Array.isArray(allowedRoles) || allowedRoles.length === 0) {\n    // If no roles specified, just being authenticated is enough\n    return children ? children : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 38\n    }, this);\n  }\n  if (!user || !allowedRoles.includes(user.role)) {\n    // Redirect to an unauthorized page or dashboard if role doesn't match\n    console.warn(`Access denied: User role '${user === null || user === void 0 ? void 0 : user.role}' not in allowed roles [${allowedRoles.join(', ')}]`);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this); // Or show an \"Unauthorized\" component\n  }\n  return children ? children : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 34\n  }, this);\n};\n_s2(RoleProtectedRoute, \"zqOjhT7Uiy3zlq7M7mfKh34T04g=\", false, function () {\n  return [useAuth];\n});\n_c2 = RoleProtectedRoute;\nexport default ProtectedRoute;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"RoleProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","isAuthenticated","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","RoleProtectedRoute","allowedRoles","_s2","user","Array","isArray","length","includes","role","console","warn","join","_c2","$RefreshReg$"],"sources":["D:/mern_app_mini/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\n// Simple protection: redirect to login if not authenticated\r\nconst ProtectedRoute = ({ children }) => {\r\n    const { isAuthenticated } = useAuth();\r\n\r\n    if (!isAuthenticated) {\r\n        // Redirect them to the /login page, but save the current location they were\r\n        // trying to go to. This allows us to send them back after login.\r\n        // state={{ from: location }} // <-- Removed location dependency for simplicity\r\n        return <Navigate to=\"/login\" replace />;\r\n    }\r\n\r\n    // If authenticated, render the child component (or Outlet for nested routes)\r\n    return children ? children : <Outlet />;\r\n};\r\n\r\n// Optional: Role-based protection\r\nexport const RoleProtectedRoute = ({ allowedRoles, children }) => {\r\n    const { isAuthenticated, user } = useAuth();\r\n\r\n    if (!isAuthenticated) {\r\n        return <Navigate to=\"/login\" replace />;\r\n    }\r\n\r\n    if (!allowedRoles || !Array.isArray(allowedRoles) || allowedRoles.length === 0) {\r\n        // If no roles specified, just being authenticated is enough\r\n        return children ? children : <Outlet />;\r\n    }\r\n\r\n     if (!user || !allowedRoles.includes(user.role)) {\r\n         // Redirect to an unauthorized page or dashboard if role doesn't match\r\n         console.warn(`Access denied: User role '${user?.role}' not in allowed roles [${allowedRoles.join(', ')}]`);\r\n         return <Navigate to=\"/dashboard\" replace />; // Or show an \"Unauthorized\" component\r\n     }\r\n\r\n\r\n    return children ? children : <Outlet />;\r\n};\r\n\r\n\r\nexport default ProtectedRoute;"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,OAAO,QAAQ,yBAAyB;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC;EAAgB,CAAC,GAAGN,OAAO,CAAC,CAAC;EAErC,IAAI,CAACM,eAAe,EAAE;IAClB;IACA;IACA;IACA,oBAAOJ,OAAA,CAACJ,QAAQ;MAACS,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;;EAEA;EACA,OAAOR,QAAQ,GAAGA,QAAQ,gBAAGF,OAAA,CAACH,MAAM;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C,CAAC;;AAED;AAAAP,EAAA,CAdMF,cAAc;EAAA,QACYH,OAAO;AAAA;AAAAa,EAAA,GADjCV,cAAc;AAepB,OAAO,MAAMW,kBAAkB,GAAGA,CAAC;EAAEC,YAAY;EAAEX;AAAS,CAAC,KAAK;EAAAY,GAAA;EAC9D,MAAM;IAAEV,eAAe;IAAEW;EAAK,CAAC,GAAGjB,OAAO,CAAC,CAAC;EAE3C,IAAI,CAACM,eAAe,EAAE;IAClB,oBAAOJ,OAAA,CAACJ,QAAQ;MAACS,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;EAEA,IAAI,CAACG,YAAY,IAAI,CAACG,KAAK,CAACC,OAAO,CAACJ,YAAY,CAAC,IAAIA,YAAY,CAACK,MAAM,KAAK,CAAC,EAAE;IAC5E;IACA,OAAOhB,QAAQ,GAAGA,QAAQ,gBAAGF,OAAA,CAACH,MAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;EAEC,IAAI,CAACK,IAAI,IAAI,CAACF,YAAY,CAACM,QAAQ,CAACJ,IAAI,CAACK,IAAI,CAAC,EAAE;IAC5C;IACAC,OAAO,CAACC,IAAI,CAAC,6BAA6BP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK,IAAI,2BAA2BP,YAAY,CAACU,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;IAC1G,oBAAOvB,OAAA,CAACJ,QAAQ;MAACS,EAAE,EAAC,YAAY;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAC;EACjD;EAGD,OAAOR,QAAQ,GAAGA,QAAQ,gBAAGF,OAAA,CAACH,MAAM;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C,CAAC;AAACI,GAAA,CApBWF,kBAAkB;EAAA,QACOd,OAAO;AAAA;AAAA0B,GAAA,GADhCZ,kBAAkB;AAuB/B,eAAeX,cAAc;AAAC,IAAAU,EAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAd,EAAA;AAAAc,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}