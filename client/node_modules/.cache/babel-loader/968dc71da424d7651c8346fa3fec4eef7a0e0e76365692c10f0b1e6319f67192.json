{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern_app_mini\\\\client\\\\src\\\\pages\\\\AttendanceEntryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport studentService from '../services/studentService';\nimport attendanceService from '../services/attendanceService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AttendanceEntryPage() {\n  _s();\n  // State for filters, students, attendance data, loading, errors etc.\n  const [filters, setFilters] = useState({\n    standard: '',\n    section: '',\n    subject: ''\n  });\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().slice(0, 10));\n  const [students, setStudents] = useState([]);\n  const [attendance, setAttendance] = useState({}); // { studentId: 'Present', ... }\n  const [isLoadingStudents, setIsLoadingStudents] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Fetch students when filters change\n  const fetchStudentsForAttendance = useCallback(async () => {\n    if (!filters.standard || !filters.section || !selectedDate) {\n      setStudents([]); // Clear students if filters not set\n      return;\n    }\n    setIsLoadingStudents(true);\n    setError('');\n    setSuccessMessage('');\n    setStudents([]); // Clear previous students\n    setAttendance({}); // Clear previous attendance data\n\n    try {\n      const studentData = await studentService.getStudents({\n        standard: filters.standard,\n        section: filters.section\n      });\n      setStudents(studentData);\n\n      // --- Pre-fill existing attendance for the selected date/class ---\n      if (studentData.length > 0) {\n        const existingAttendanceData = await attendanceService.getAttendance({\n          date: selectedDate,\n          standard: filters.standard,\n          section: filters.section,\n          subject: filters.subject || null,\n          // Use subject if provided\n          limit: studentData.length * 2 // Fetch more than needed just in case\n        });\n        const initialAttendance = {};\n        studentData.forEach(student => {\n          var _existingAttendanceDa;\n          const record = existingAttendanceData === null || existingAttendanceData === void 0 ? void 0 : (_existingAttendanceDa = existingAttendanceData.attendance) === null || _existingAttendanceDa === void 0 ? void 0 : _existingAttendanceDa.find(att => att.studentId._id === student._id);\n          initialAttendance[student._id] = record ? record.status : 'Present'; // Default to Present if no record found\n        });\n        setAttendance(initialAttendance);\n      } else {\n        setAttendance({}); // No students, no attendance data needed\n      }\n    } catch (err) {\n      setError(err.message || 'Failed to load students or existing attendance.');\n    } finally {\n      setIsLoadingStudents(false);\n    }\n  }, [filters.standard, filters.section, filters.subject, selectedDate]); // Dependencies for fetching\n\n  useEffect(() => {\n    fetchStudentsForAttendance();\n  }, [fetchStudentsForAttendance]); // Run when the fetch function changes (due to dependencies)\n\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleDateChange = e => {\n    setSelectedDate(e.target.value);\n  };\n  const handleStatusChange = (studentId, status) => {\n    setAttendance(prev => ({\n      ...prev,\n      [studentId]: status\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (students.length === 0) {\n      setError('No students loaded for the selected class.');\n      return;\n    }\n    setIsSubmitting(true);\n    setError('');\n    setSuccessMessage('');\n    const records = Object.entries(attendance).map(([studentId, status]) => ({\n      studentId,\n      status\n    }));\n    try {\n      const response = await attendanceService.markAttendance({\n        date: selectedDate,\n        standard: filters.standard,\n        section: filters.section,\n        subject: filters.subject || null,\n        // Send subject if it exists\n        records: records\n      });\n      setSuccessMessage(response.message || 'Attendance submitted successfully!');\n      // Optionally refetch attendance to confirm, or rely on the state update\n      // fetchStudentsForAttendance(); // Re-fetch to show updated status immediately\n    } catch (err) {\n      setError(err.message || 'Failed to submit attendance.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mark Attendance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem',\n        display: 'flex',\n        gap: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: selectedDate,\n          onChange: handleDateChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Standard:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"standard\",\n          value: filters.standard,\n          onChange: handleFilterChange,\n          placeholder: \"e.g., 10th\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Section:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"section\",\n          value: filters.section,\n          onChange: handleFilterChange,\n          placeholder: \"e.g., A\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Subject (Optional):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"subject\",\n          value: filters.subject,\n          onChange: handleFilterChange,\n          placeholder: \"e.g., Maths\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 23\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 32\n    }, this), isLoadingStudents && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading students...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 35\n    }, this), !isLoadingStudents && students.length === 0 && filters.standard && filters.section && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No students found for the selected class, or filters not fully set.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }, this), !isLoadingStudents && students.length > 0 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse',\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Roll No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.rollNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: attendance[student._id] || 'Present' // Default to Present\n                ,\n                onChange: e => handleStatusChange(student._id, e.target.value),\n                style: {\n                  padding: '5px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Present\",\n                  children: \"Present\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Absent\",\n                  children: \"Absent\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Late\",\n                  children: \"Late\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 37\n            }, this)]\n          }, student._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting || isLoadingStudents,\n        style: {\n          marginTop: '1rem'\n        },\n        children: isSubmitting ? 'Submitting...' : 'Submit Attendance'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n_s(AttendanceEntryPage, \"QPt3kcLz0cK9GvCEvukg9ppp2w0=\");\n_c = AttendanceEntryPage;\nexport default AttendanceEntryPage;\nvar _c;\n$RefreshReg$(_c, \"AttendanceEntryPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","studentService","attendanceService","jsxDEV","_jsxDEV","AttendanceEntryPage","_s","filters","setFilters","standard","section","subject","selectedDate","setSelectedDate","Date","toISOString","slice","students","setStudents","attendance","setAttendance","isLoadingStudents","setIsLoadingStudents","isSubmitting","setIsSubmitting","error","setError","successMessage","setSuccessMessage","fetchStudentsForAttendance","studentData","getStudents","length","existingAttendanceData","getAttendance","date","limit","initialAttendance","forEach","student","_existingAttendanceDa","record","find","att","studentId","_id","status","err","message","handleFilterChange","e","name","value","target","prev","handleDateChange","handleStatusChange","handleSubmit","preventDefault","records","Object","entries","map","response","markAttendance","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","display","gap","type","onChange","required","placeholder","color","onSubmit","border","width","borderCollapse","marginTop","rollNumber","padding","disabled","_c","$RefreshReg$"],"sources":["D:/mern_app_mini/client/src/pages/AttendanceEntryPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport studentService from '../services/studentService';\r\nimport attendanceService from '../services/attendanceService';\r\n\r\nfunction AttendanceEntryPage() {\r\n    // State for filters, students, attendance data, loading, errors etc.\r\n    const [filters, setFilters] = useState({ standard: '', section: '', subject: '' });\r\n    const [selectedDate, setSelectedDate] = useState(new Date().toISOString().slice(0, 10));\r\n    const [students, setStudents] = useState([]);\r\n    const [attendance, setAttendance] = useState({}); // { studentId: 'Present', ... }\r\n    const [isLoadingStudents, setIsLoadingStudents] = useState(false);\r\n     const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    // Fetch students when filters change\r\n    const fetchStudentsForAttendance = useCallback(async () => {\r\n        if (!filters.standard || !filters.section || !selectedDate) {\r\n            setStudents([]); // Clear students if filters not set\r\n            return;\r\n        }\r\n        setIsLoadingStudents(true);\r\n        setError('');\r\n        setSuccessMessage('');\r\n        setStudents([]); // Clear previous students\r\n        setAttendance({}); // Clear previous attendance data\r\n\r\n        try {\r\n            const studentData = await studentService.getStudents({\r\n                standard: filters.standard,\r\n                section: filters.section\r\n            });\r\n             setStudents(studentData);\r\n\r\n             // --- Pre-fill existing attendance for the selected date/class ---\r\n             if (studentData.length > 0) {\r\n                 const existingAttendanceData = await attendanceService.getAttendance({\r\n                    date: selectedDate,\r\n                    standard: filters.standard,\r\n                    section: filters.section,\r\n                    subject: filters.subject || null, // Use subject if provided\r\n                    limit: studentData.length * 2 // Fetch more than needed just in case\r\n                });\r\n\r\n                const initialAttendance = {};\r\n                 studentData.forEach(student => {\r\n                     const record = existingAttendanceData?.attendance?.find(att => att.studentId._id === student._id);\r\n                     initialAttendance[student._id] = record ? record.status : 'Present'; // Default to Present if no record found\r\n                 });\r\n                 setAttendance(initialAttendance);\r\n            } else {\r\n                 setAttendance({}); // No students, no attendance data needed\r\n             }\r\n\r\n\r\n        } catch (err) {\r\n            setError(err.message || 'Failed to load students or existing attendance.');\r\n        } finally {\r\n            setIsLoadingStudents(false);\r\n        }\r\n    }, [filters.standard, filters.section, filters.subject, selectedDate]); // Dependencies for fetching\r\n\r\n    useEffect(() => {\r\n        fetchStudentsForAttendance();\r\n    }, [fetchStudentsForAttendance]); // Run when the fetch function changes (due to dependencies)\r\n\r\n\r\n    const handleFilterChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFilters(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleDateChange = (e) => {\r\n        setSelectedDate(e.target.value);\r\n    };\r\n\r\n    const handleStatusChange = (studentId, status) => {\r\n        setAttendance(prev => ({ ...prev, [studentId]: status }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (students.length === 0) {\r\n            setError('No students loaded for the selected class.');\r\n            return;\r\n        }\r\n        setIsSubmitting(true);\r\n        setError('');\r\n        setSuccessMessage('');\r\n\r\n        const records = Object.entries(attendance).map(([studentId, status]) => ({\r\n            studentId, status\r\n        }));\r\n\r\n        try {\r\n            const response = await attendanceService.markAttendance({\r\n                date: selectedDate,\r\n                standard: filters.standard,\r\n                section: filters.section,\r\n                subject: filters.subject || null, // Send subject if it exists\r\n                records: records\r\n            });\r\n            setSuccessMessage(response.message || 'Attendance submitted successfully!');\r\n            // Optionally refetch attendance to confirm, or rely on the state update\r\n             // fetchStudentsForAttendance(); // Re-fetch to show updated status immediately\r\n        } catch (err) {\r\n            setError(err.message || 'Failed to submit attendance.');\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Mark Attendance</h2>\r\n\r\n            {/* Filter Selection */}\r\n            <div style={{ marginBottom: '1rem', display: 'flex', gap: '1rem' }}>\r\n                <label>Date:\r\n                    <input type=\"date\" value={selectedDate} onChange={handleDateChange} required />\r\n                </label>\r\n                <label>Standard:\r\n                    <input type=\"text\" name=\"standard\" value={filters.standard} onChange={handleFilterChange} placeholder=\"e.g., 10th\" required />\r\n                </label>\r\n                <label>Section:\r\n                    <input type=\"text\" name=\"section\" value={filters.section} onChange={handleFilterChange} placeholder=\"e.g., A\" required />\r\n                </label>\r\n                <label>Subject (Optional):\r\n                    <input type=\"text\" name=\"subject\" value={filters.subject} onChange={handleFilterChange} placeholder=\"e.g., Maths\" />\r\n                </label>\r\n                 {/* <button onClick={fetchStudentsForAttendance} disabled={isLoadingStudents || !filters.standard || !filters.section}>Load Students</button> */}\r\n                 {/* Automatic loading now */}\r\n            </div>\r\n\r\n            {error && <p style={{ color: 'red' }}>Error: {error}</p>}\r\n            {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\r\n\r\n            {isLoadingStudents && <p>Loading students...</p>}\r\n\r\n            {!isLoadingStudents && students.length === 0 && filters.standard && filters.section && (\r\n                <p>No students found for the selected class, or filters not fully set.</p>\r\n            )}\r\n\r\n            {!isLoadingStudents && students.length > 0 && (\r\n                <form onSubmit={handleSubmit}>\r\n                    <table border=\"1\" style={{ width: '100%', borderCollapse: 'collapse', marginTop: '1rem' }}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Roll No</th>\r\n                                <th>Name</th>\r\n                                <th>Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {students.map(student => (\r\n                                <tr key={student._id}>\r\n                                    <td>{student.rollNumber}</td>\r\n                                    <td>{student.name}</td>\r\n                                    <td>\r\n                                        <select\r\n                                            value={attendance[student._id] || 'Present'} // Default to Present\r\n                                            onChange={(e) => handleStatusChange(student._id, e.target.value)}\r\n                                            style={{ padding: '5px' }}\r\n                                        >\r\n                                            <option value=\"Present\">Present</option>\r\n                                            <option value=\"Absent\">Absent</option>\r\n                                            <option value=\"Late\">Late</option>\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    <button type=\"submit\" disabled={isSubmitting || isLoadingStudents} style={{ marginTop: '1rem' }}>\r\n                        {isSubmitting ? 'Submitting...' : 'Submit Attendance'}\r\n                    </button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AttendanceEntryPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}