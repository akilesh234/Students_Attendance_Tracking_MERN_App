{"ast":null,"code":"import api from './api';\n\n// Fetch students, optionally filtered by standard/section\nconst getStudents = async (params = {}) => {\n  // params = { standard: '10th', section: 'A' }\n  try {\n    const response = await api.get('/students', {\n      params\n    }); // Pass query params\n    return response.data; // Array of students\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error(\"Get students service error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || new Error('Failed to fetch students');\n  }\n};\n\n// Add a new student\nconst addStudent = async studentData => {\n  // { name, rollNumber, standard, section }\n  try {\n    const response = await api.post('/students', studentData);\n    return response.data; // The newly created student object\n  } catch (error) {\n    var _error$response3, _error$response4;\n    console.error(\"Add student service error:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || new Error('Failed to add student');\n  }\n};\n\n// Update an existing student\nconst updateStudent = async (id, studentData) => {\n  try {\n    const response = await api.put(`/students/${id}`, studentData);\n    return response.data; // The updated student object\n  } catch (error) {\n    var _error$response5, _error$response6;\n    console.error(\"Update student service error:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || new Error('Failed to update student');\n  }\n};\n\n// Deactivate (soft delete) a student\nconst deactivateStudent = async id => {\n  try {\n    const response = await api.delete(`/students/${id}`);\n    return response.data; // { message: 'Student deactivated successfully' }\n  } catch (error) {\n    var _error$response7, _error$response8;\n    console.error(\"Deactivate student service error:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n    throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || new Error('Failed to deactivate student');\n  }\n};\nexport default {\n  getStudents,\n  addStudent,\n  updateStudent,\n  deactivateStudent\n};","map":{"version":3,"names":["api","getStudents","params","response","get","data","error","_error$response","_error$response2","console","message","Error","addStudent","studentData","post","_error$response3","_error$response4","updateStudent","id","put","_error$response5","_error$response6","deactivateStudent","delete","_error$response7","_error$response8"],"sources":["D:/mern_app_mini/client/src/services/studentService.js"],"sourcesContent":["import api from './api';\r\n\r\n// Fetch students, optionally filtered by standard/section\r\nconst getStudents = async (params = {}) => { // params = { standard: '10th', section: 'A' }\r\n    try {\r\n        const response = await api.get('/students', { params }); // Pass query params\r\n        return response.data; // Array of students\r\n    } catch (error) {\r\n        console.error(\"Get students service error:\", error.response?.data || error.message);\r\n        throw error.response?.data || new Error('Failed to fetch students');\r\n    }\r\n};\r\n\r\n// Add a new student\r\nconst addStudent = async (studentData) => { // { name, rollNumber, standard, section }\r\n    try {\r\n        const response = await api.post('/students', studentData);\r\n        return response.data; // The newly created student object\r\n    } catch (error) {\r\n        console.error(\"Add student service error:\", error.response?.data || error.message);\r\n        throw error.response?.data || new Error('Failed to add student');\r\n    }\r\n};\r\n\r\n// Update an existing student\r\nconst updateStudent = async (id, studentData) => {\r\n    try {\r\n        const response = await api.put(`/students/${id}`, studentData);\r\n        return response.data; // The updated student object\r\n    } catch (error) {\r\n        console.error(\"Update student service error:\", error.response?.data || error.message);\r\n        throw error.response?.data || new Error('Failed to update student');\r\n    }\r\n};\r\n\r\n// Deactivate (soft delete) a student\r\nconst deactivateStudent = async (id) => {\r\n    try {\r\n        const response = await api.delete(`/students/${id}`);\r\n        return response.data; // { message: 'Student deactivated successfully' }\r\n    } catch (error) {\r\n        console.error(\"Deactivate student service error:\", error.response?.data || error.message);\r\n        throw error.response?.data || new Error('Failed to deactivate student');\r\n    }\r\n};\r\n\r\n\r\nexport default {\r\n    getStudents,\r\n    addStudent,\r\n    updateStudent,\r\n    deactivateStudent,\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}