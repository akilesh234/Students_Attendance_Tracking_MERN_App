{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern_app_mini\\\\client\\\\src\\\\pages\\\\AttendanceViewPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport attendanceService from '../services/attendanceService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AttendanceViewPage() {\n  _s();\n  const [filters, setFilters] = useState({\n    date: new Date().toISOString().slice(0, 10),\n    // Default to today\n    standard: '',\n    section: '',\n    subject: '',\n    studentId: '' // Optional: Filter by specific student ID\n  });\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [pagination, setPagination] = useState({\n    currentPage: 1,\n    totalPages: 1,\n    totalRecords: 0\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Function to fetch attendance data\n  const fetchAttendance = useCallback(async (page = 1) => {\n    // Only fetch if essential filters are present (e.g., date, standard, section)\n    if (!filters.date || !filters.standard || !filters.section) {\n      // Optionally show a message to select filters\n      // setError(\"Please select Date, Standard, and Section to view attendance.\");\n      setAttendanceData([]); // Clear data if filters are incomplete\n      setPagination({\n        currentPage: 1,\n        totalPages: 1,\n        totalRecords: 0\n      });\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    try {\n      const params = {\n        date: filters.date,\n        standard: filters.standard,\n        section: filters.section,\n        subject: filters.subject || null,\n        // Pass subject or null\n        studentId: filters.studentId || null,\n        // Pass studentId if present\n        page: page,\n        limit: 20 // Set a reasonable limit per page\n      };\n      // Remove null/empty params before sending\n      Object.keys(params).forEach(key => (params[key] == null || params[key] === '') && delete params[key]);\n      const data = await attendanceService.getAttendance(params);\n      setAttendanceData(data.attendance || []);\n      setPagination({\n        currentPage: data.currentPage || 1,\n        totalPages: data.totalPages || 1,\n        totalRecords: data.totalRecords || 0\n      });\n    } catch (err) {\n      setError(err.message || 'Failed to fetch attendance records');\n      setAttendanceData([]); // Clear data on error\n      setPagination({\n        currentPage: 1,\n        totalPages: 1,\n        totalRecords: 0\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [filters.date, filters.standard, filters.section, filters.subject, filters.studentId]); // Dependencies\n\n  // Initial fetch and fetch on filter change\n  useEffect(() => {\n    fetchAttendance(1); // Fetch page 1 when filters change\n  }, [fetchAttendance]); // Rerun when the fetch function definition changes\n\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // No immediate fetch here, useEffect handles it based on filter changes\n  };\n\n  // --- Pagination Handlers ---\n  const handleNextPage = () => {\n    if (pagination.currentPage < pagination.totalPages) {\n      fetchAttendance(pagination.currentPage + 1);\n    }\n  };\n  const handlePrevPage = () => {\n    if (pagination.currentPage > 1) {\n      fetchAttendance(pagination.currentPage - 1);\n    }\n  };\n\n  // --- Optional: Student Report Generation Trigger ---\n  const handleViewReport = async () => {\n    if (!filters.studentId) {\n      alert(\"Please enter a Student ID to view a report.\");\n      return;\n    }\n    // Navigate to a report page or show modal?\n    // For simplicity, just log the call for now\n    console.log(\"Requesting report for student:\", filters.studentId);\n    try {\n      const reportData = await attendanceService.getStudentReport(filters.studentId, {\n        startDate: '2025-01-01',\n        // Example: Get date range from user input\n        endDate: filters.date // Example: Use current filter date as end\n      });\n      console.log(\"Report Data:\", reportData);\n      alert(`Report for ${reportData.student.name}: ${reportData.report.percentage}% Present`);\n    } catch (reportError) {\n      console.error(\"Report Error:\", reportError);\n      alert(`Failed to get report: ${reportError.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"View Attendance Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem',\n        display: 'flex',\n        gap: '1rem',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: filters.date,\n          onChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Standard: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"standard\",\n          value: filters.standard,\n          onChange: handleFilterChange,\n          placeholder: \"e.g., 10th\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Section: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"section\",\n          value: filters.section,\n          onChange: handleFilterChange,\n          placeholder: \"e.g., A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Subject (Opt): \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"subject\",\n          value: filters.subject,\n          onChange: handleFilterChange,\n          placeholder: \"e.g., Maths\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Student ID (Opt): \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"studentId\",\n          value: filters.studentId,\n          onChange: handleFilterChange,\n          placeholder: \"Filter by Student ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), filters.studentId && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleViewReport,\n      style: {\n        marginBottom: '1rem'\n      },\n      children: \"View Report for Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 18\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 23\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading attendance...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 27\n    }, this), !isLoading && attendanceData.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Records Found: \", pagination.totalRecords]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Roll No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Student Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Standard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Section\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Marked By\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: attendanceData.map(record => {\n            var _record$studentId, _record$studentId2, _record$markedBy;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(record.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 38\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_record$studentId = record.studentId) === null || _record$studentId === void 0 ? void 0 : _record$studentId.rollNumber) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 38\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_record$studentId2 = record.studentId) === null || _record$studentId2 === void 0 ? void 0 : _record$studentId2.name) || 'Student Not Found'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: record.standard\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 38\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: record.section\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 38\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: record.subject || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 38\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: record.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 38\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_record$markedBy = record.markedBy) === null || _record$markedBy === void 0 ? void 0 : _record$markedBy.username) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 38\n              }, this), \" \"]\n            }, record._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '1rem',\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevPage,\n          disabled: pagination.currentPage <= 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Page \", pagination.currentPage, \" of \", pagination.totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextPage,\n          disabled: pagination.currentPage >= pagination.totalPages,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true), !isLoading && attendanceData.length === 0 && filters.date && filters.standard && filters.section && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No attendance records found for the selected criteria.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }, this), !isLoading && (!filters.date || !filters.standard || !filters.section) && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select Date, Standard, and Section to view attendance.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n_s(AttendanceViewPage, \"7Nqh4qG3S518E7124q08gVrBnC8=\");\n_c = AttendanceViewPage;\nexport default AttendanceViewPage;\nvar _c;\n$RefreshReg$(_c, \"AttendanceViewPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","attendanceService","jsxDEV","_jsxDEV","Fragment","_Fragment","AttendanceViewPage","_s","filters","setFilters","date","Date","toISOString","slice","standard","section","subject","studentId","attendanceData","setAttendanceData","pagination","setPagination","currentPage","totalPages","totalRecords","isLoading","setIsLoading","error","setError","fetchAttendance","page","params","limit","Object","keys","forEach","key","data","getAttendance","attendance","err","message","handleFilterChange","e","name","value","target","prev","handleNextPage","handlePrevPage","handleViewReport","alert","console","log","reportData","getStudentReport","startDate","endDate","student","report","percentage","reportError","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","display","gap","flexWrap","type","onChange","placeholder","onClick","color","length","border","width","borderCollapse","map","record","_record$studentId","_record$studentId2","_record$markedBy","toLocaleDateString","rollNumber","status","markedBy","username","_id","marginTop","justifyContent","disabled","_c","$RefreshReg$"],"sources":["D:/mern_app_mini/client/src/pages/AttendanceViewPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport attendanceService from '../services/attendanceService';\r\n\r\nfunction AttendanceViewPage() {\r\n    const [filters, setFilters] = useState({\r\n        date: new Date().toISOString().slice(0, 10), // Default to today\r\n        standard: '',\r\n        section: '',\r\n        subject: '',\r\n        studentId: '' // Optional: Filter by specific student ID\r\n    });\r\n    const [attendanceData, setAttendanceData] = useState([]);\r\n    const [pagination, setPagination] = useState({\r\n        currentPage: 1,\r\n        totalPages: 1,\r\n        totalRecords: 0\r\n    });\r\n     const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n     // Function to fetch attendance data\r\n     const fetchAttendance = useCallback(async (page = 1) => {\r\n         // Only fetch if essential filters are present (e.g., date, standard, section)\r\n         if (!filters.date || !filters.standard || !filters.section) {\r\n             // Optionally show a message to select filters\r\n             // setError(\"Please select Date, Standard, and Section to view attendance.\");\r\n             setAttendanceData([]); // Clear data if filters are incomplete\r\n             setPagination({ currentPage: 1, totalPages: 1, totalRecords: 0 });\r\n             return;\r\n         }\r\n\r\n         setIsLoading(true);\r\n         setError('');\r\n         try {\r\n             const params = {\r\n                date: filters.date,\r\n                standard: filters.standard,\r\n                section: filters.section,\r\n                subject: filters.subject || null, // Pass subject or null\r\n                studentId: filters.studentId || null, // Pass studentId if present\r\n                page: page,\r\n                limit: 20 // Set a reasonable limit per page\r\n             };\r\n             // Remove null/empty params before sending\r\n             Object.keys(params).forEach(key => (params[key] == null || params[key] === '') && delete params[key]);\r\n\r\n\r\n             const data = await attendanceService.getAttendance(params);\r\n             setAttendanceData(data.attendance || []);\r\n             setPagination({\r\n                 currentPage: data.currentPage || 1,\r\n                 totalPages: data.totalPages || 1,\r\n                 totalRecords: data.totalRecords || 0\r\n             });\r\n         } catch (err) {\r\n            setError(err.message || 'Failed to fetch attendance records');\r\n             setAttendanceData([]); // Clear data on error\r\n             setPagination({ currentPage: 1, totalPages: 1, totalRecords: 0 });\r\n         } finally {\r\n             setIsLoading(false);\r\n         }\r\n     }, [filters.date, filters.standard, filters.section, filters.subject, filters.studentId]); // Dependencies\r\n\r\n\r\n    // Initial fetch and fetch on filter change\r\n    useEffect(() => {\r\n        fetchAttendance(1); // Fetch page 1 when filters change\r\n    }, [fetchAttendance]); // Rerun when the fetch function definition changes\r\n\r\n    const handleFilterChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFilters(prev => ({ ...prev, [name]: value }));\r\n         // No immediate fetch here, useEffect handles it based on filter changes\r\n    };\r\n\r\n     // --- Pagination Handlers ---\r\n     const handleNextPage = () => {\r\n         if (pagination.currentPage < pagination.totalPages) {\r\n             fetchAttendance(pagination.currentPage + 1);\r\n         }\r\n     };\r\n\r\n     const handlePrevPage = () => {\r\n         if (pagination.currentPage > 1) {\r\n             fetchAttendance(pagination.currentPage - 1);\r\n         }\r\n     };\r\n\r\n     // --- Optional: Student Report Generation Trigger ---\r\n     const handleViewReport = async () => {\r\n         if (!filters.studentId) {\r\n             alert(\"Please enter a Student ID to view a report.\");\r\n             return;\r\n         }\r\n         // Navigate to a report page or show modal?\r\n         // For simplicity, just log the call for now\r\n         console.log(\"Requesting report for student:\", filters.studentId);\r\n         try {\r\n             const reportData = await attendanceService.getStudentReport(filters.studentId, {\r\n                 startDate: '2025-01-01', // Example: Get date range from user input\r\n                 endDate: filters.date // Example: Use current filter date as end\r\n             });\r\n             console.log(\"Report Data:\", reportData);\r\n             alert(`Report for ${reportData.student.name}: ${reportData.report.percentage}% Present`);\r\n         } catch (reportError) {\r\n             console.error(\"Report Error:\", reportError);\r\n             alert(`Failed to get report: ${reportError.message}`);\r\n         }\r\n     };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>View Attendance Records</h2>\r\n\r\n             {/* Filter Inputs */}\r\n            <div style={{ marginBottom: '1rem', display: 'flex', gap: '1rem', flexWrap: 'wrap' }}>\r\n                <label>Date: <input type=\"date\" name=\"date\" value={filters.date} onChange={handleFilterChange} /></label>\r\n                <label>Standard: <input type=\"text\" name=\"standard\" value={filters.standard} onChange={handleFilterChange} placeholder=\"e.g., 10th\" /></label>\r\n                <label>Section: <input type=\"text\" name=\"section\" value={filters.section} onChange={handleFilterChange} placeholder=\"e.g., A\" /></label>\r\n                <label>Subject (Opt): <input type=\"text\" name=\"subject\" value={filters.subject} onChange={handleFilterChange} placeholder=\"e.g., Maths\" /></label>\r\n                <label>Student ID (Opt): <input type=\"text\" name=\"studentId\" value={filters.studentId} onChange={handleFilterChange} placeholder=\"Filter by Student ID\" /></label>\r\n                 {/* Removed explicit fetch button as it fetches automatically */}\r\n            </div>\r\n\r\n            {/* Optional: Button to trigger student report */}\r\n             {filters.studentId && (\r\n                 <button onClick={handleViewReport} style={{ marginBottom: '1rem' }}>View Report for Student</button>\r\n             )}\r\n\r\n\r\n            {error && <p style={{ color: 'red' }}>Error: {error}</p>}\r\n            {isLoading && <p>Loading attendance...</p>}\r\n\r\n            {!isLoading && attendanceData.length > 0 && (\r\n                <>\r\n                    <p>Total Records Found: {pagination.totalRecords}</p>\r\n                    <table border=\"1\" style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Date</th>\r\n                                <th>Roll No</th>\r\n                                <th>Student Name</th>\r\n                                <th>Standard</th>\r\n                                <th>Section</th>\r\n                                <th>Subject</th>\r\n                                <th>Status</th>\r\n                                <th>Marked By</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {attendanceData.map(record => (\r\n                                <tr key={record._id}>\r\n                                     <td>{new Date(record.date).toLocaleDateString()}</td> {/* Format date */}\r\n                                     <td>{record.studentId?.rollNumber || 'N/A'}</td> {/* Handle if student somehow deleted */}\r\n                                    <td>{record.studentId?.name || 'Student Not Found'}</td>\r\n                                     <td>{record.standard}</td>\r\n                                     <td>{record.section}</td>\r\n                                     <td>{record.subject || '-'}</td>\r\n                                     <td>{record.status}</td>\r\n                                     <td>{record.markedBy?.username || 'N/A'}</td> {/* Requires populating markedBy */}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                     {/* Pagination Controls */}\r\n                     <div style={{ marginTop: '1rem', display: 'flex', justifyContent: 'space-between' }}>\r\n                         <button onClick={handlePrevPage} disabled={pagination.currentPage <= 1}>\r\n                             Previous\r\n                         </button>\r\n                         <span>Page {pagination.currentPage} of {pagination.totalPages}</span>\r\n                         <button onClick={handleNextPage} disabled={pagination.currentPage >= pagination.totalPages}>\r\n                             Next\r\n                         </button>\r\n                     </div>\r\n                </>\r\n            )}\r\n\r\n            {!isLoading && attendanceData.length === 0 && filters.date && filters.standard && filters.section && (\r\n                <p>No attendance records found for the selected criteria.</p>\r\n            )}\r\n             {!isLoading && (!filters.date || !filters.standard || !filters.section) && (\r\n                <p>Please select Date, Standard, and Section to view attendance.</p>\r\n             )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AttendanceViewPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}