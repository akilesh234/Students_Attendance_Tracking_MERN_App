{"ast":null,"code":"import api from './api';\n\n// Mark attendance for a class on a date\nconst markAttendance = async attendancePayload => {\n  // payload: { date, standard, section, subject(optional), records: [{ studentId, status }] }\n  try {\n    const response = await api.post('/attendance/mark', attendancePayload);\n    return response.data; // { message, inserted, updated }\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error(\"Mark attendance service error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || new Error('Failed to mark attendance');\n  }\n};\n\n// Get attendance records with filters\nconst getAttendance = async (params = {}) => {\n  // params: { date, standard, section, subject(optional), studentId(optional), page, limit }\n  try {\n    const response = await api.get('/attendance', {\n      params\n    });\n    // response.data should be { totalRecords, currentPage, totalPages, attendance: [...] }\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response4;\n    console.error(\"Get attendance service error:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || new Error('Failed to fetch attendance records');\n  }\n};\n\n// Get student-specific report\nconst getStudentReport = async (studentId, params = {}) => {\n  // params: { startDate, endDate, subject(optional) }\n  if (!studentId) throw new Error('Student ID is required for report');\n  try {\n    const response = await api.get(`/attendance/report/student/${studentId}`, {\n      params\n    });\n    return response.data; // { student: {...}, report: {...}, details: [...] }\n  } catch (error) {\n    var _error$response5, _error$response6;\n    console.error(\"Get student report service error:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || new Error('Failed to fetch student report');\n  }\n};\nexport default {\n  markAttendance,\n  getAttendance,\n  getStudentReport\n};","map":{"version":3,"names":["api","markAttendance","attendancePayload","response","post","data","error","_error$response","_error$response2","console","message","Error","getAttendance","params","get","_error$response3","_error$response4","getStudentReport","studentId","_error$response5","_error$response6"],"sources":["D:/mern_app_mini/client/src/services/attendanceService.js"],"sourcesContent":["import api from './api';\r\n\r\n// Mark attendance for a class on a date\r\nconst markAttendance = async (attendancePayload) => {\r\n    // payload: { date, standard, section, subject(optional), records: [{ studentId, status }] }\r\n    try {\r\n        const response = await api.post('/attendance/mark', attendancePayload);\r\n        return response.data; // { message, inserted, updated }\r\n    } catch (error) {\r\n        console.error(\"Mark attendance service error:\", error.response?.data || error.message);\r\n        throw error.response?.data || new Error('Failed to mark attendance');\r\n    }\r\n};\r\n\r\n// Get attendance records with filters\r\nconst getAttendance = async (params = {}) => {\r\n    // params: { date, standard, section, subject(optional), studentId(optional), page, limit }\r\n    try {\r\n        const response = await api.get('/attendance', { params });\r\n        // response.data should be { totalRecords, currentPage, totalPages, attendance: [...] }\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Get attendance service error:\", error.response?.data || error.message);\r\n        throw error.response?.data || new Error('Failed to fetch attendance records');\r\n    }\r\n};\r\n\r\n// Get student-specific report\r\nconst getStudentReport = async (studentId, params = {}) => {\r\n    // params: { startDate, endDate, subject(optional) }\r\n     if (!studentId) throw new Error('Student ID is required for report');\r\n    try {\r\n        const response = await api.get(`/attendance/report/student/${studentId}`, { params });\r\n        return response.data; // { student: {...}, report: {...}, details: [...] }\r\n    } catch (error) {\r\n        console.error(\"Get student report service error:\", error.response?.data || error.message);\r\n        throw error.response?.data || new Error('Failed to fetch student report');\r\n    }\r\n};\r\n\r\n\r\nexport default {\r\n    markAttendance,\r\n    getAttendance,\r\n    getStudentReport,\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA,MAAMC,cAAc,GAAG,MAAOC,iBAAiB,IAAK;EAChD;EACA,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,kBAAkB,EAAEF,iBAAiB,CAAC;IACtE,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,gBAAA;IACZC,OAAO,CAACH,KAAK,CAAC,gCAAgC,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACI,OAAO,CAAC;IACtF,MAAM,EAAAF,gBAAA,GAAAF,KAAK,CAACH,QAAQ,cAAAK,gBAAA,uBAAdA,gBAAA,CAAgBH,IAAI,KAAI,IAAIM,KAAK,CAAC,2BAA2B,CAAC;EACxE;AACJ,CAAC;;AAED;AACA,MAAMC,aAAa,GAAG,MAAAA,CAAOC,MAAM,GAAG,CAAC,CAAC,KAAK;EACzC;EACA,IAAI;IACA,MAAMV,QAAQ,GAAG,MAAMH,GAAG,CAACc,GAAG,CAAC,aAAa,EAAE;MAAED;IAAO,CAAC,CAAC;IACzD;IACA,OAAOV,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAS,gBAAA,EAAAC,gBAAA;IACZP,OAAO,CAACH,KAAK,CAAC,+BAA+B,EAAE,EAAAS,gBAAA,GAAAT,KAAK,CAACH,QAAQ,cAAAY,gBAAA,uBAAdA,gBAAA,CAAgBV,IAAI,KAAIC,KAAK,CAACI,OAAO,CAAC;IACrF,MAAM,EAAAM,gBAAA,GAAAV,KAAK,CAACH,QAAQ,cAAAa,gBAAA,uBAAdA,gBAAA,CAAgBX,IAAI,KAAI,IAAIM,KAAK,CAAC,oCAAoC,CAAC;EACjF;AACJ,CAAC;;AAED;AACA,MAAMM,gBAAgB,GAAG,MAAAA,CAAOC,SAAS,EAAEL,MAAM,GAAG,CAAC,CAAC,KAAK;EACvD;EACC,IAAI,CAACK,SAAS,EAAE,MAAM,IAAIP,KAAK,CAAC,mCAAmC,CAAC;EACrE,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMH,GAAG,CAACc,GAAG,CAAC,8BAA8BI,SAAS,EAAE,EAAE;MAAEL;IAAO,CAAC,CAAC;IACrF,OAAOV,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAa,gBAAA,EAAAC,gBAAA;IACZX,OAAO,CAACH,KAAK,CAAC,mCAAmC,EAAE,EAAAa,gBAAA,GAAAb,KAAK,CAACH,QAAQ,cAAAgB,gBAAA,uBAAdA,gBAAA,CAAgBd,IAAI,KAAIC,KAAK,CAACI,OAAO,CAAC;IACzF,MAAM,EAAAU,gBAAA,GAAAd,KAAK,CAACH,QAAQ,cAAAiB,gBAAA,uBAAdA,gBAAA,CAAgBf,IAAI,KAAI,IAAIM,KAAK,CAAC,gCAAgC,CAAC;EAC7E;AACJ,CAAC;AAGD,eAAe;EACXV,cAAc;EACdW,aAAa;EACbK;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}